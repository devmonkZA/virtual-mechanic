<wiki:toc max_depth="3" />

This document lists the guidelines, system diagrams, data requirements and feature priority of the project.

= Guidelines =

The development of the software will be based on the Mac OS. The whole development process will be using the Objective-C programming language and the development environment will be XCode, provided by Apple. The iPhone Simulator and compiler tools from XCode will be applied during the development phase. There will be an FTP server supporting the online discussion and bug reporting features of the product. The database on the server side will be a MySQL database, which will record user information, uploaded files and files ready for downloading. The language used in development of the database is the SQL programming language.

The whole project will be implemented using the iPhone SDK 3.0. For more detail: The connection between server side and client side will be implemented using the CFNetwork framework; And user interface design will be based on the Interface Builder provided by Apple; The image processing, page switch and all other user interface functionality will be implemented based on the UIKit framework.

The tools listed above are all free to use. Since the frameworks are only used and not modified for financial means, there is no copyright issues. No royalties nor acknowledgements need to be made. 

----

= State Machine Diagram =

http://i684.photobucket.com/albums/vv204/tyrelltle/Screenshot2009-10-07at656.jpg

----

= Class Diagram =
http://i684.photobucket.com/albums/vv204/tyrelltle/classDia.jpg

----

= Data Requirements =

The files used in development of the project will be mainly:
 
  #  .xcodeproject file which can directly launch XCode with the current project development window, which is convenient for distributing incomplete project files among team members.
  # .h files which are header files of the classes.
  # .m files which are implementation of classes.
  # .plist files which contain configuration information of the project
  # .xib files which are actually user interface files based on Interface Builder;

Images will be used to depict different components (layers) of the machines for users to explore. The type of all images will be of the .GIF format. All images will be stored in the Image folder under the project folder. It is important to note that when image files are “imported”, the physical directories of the files do not change.

----

==I/O requirements==  

===Main menu===

  Touching on the menu's navigation bar allows the user to switch between different pages. Users will be able download new machines or open existing ones. 
 
===Machine view===

 The user can touch any component of the machine to 'select' it; meaning that the user will be able to view information about it as well as move it around. Using two fingers to drag the screen will zoom in or zoom out the image of the machine (or component of the machine). Also, zooming in and out using two fingers can control the transparent of the current top layer of the build of the machine. The user can drag any component of the machine to see parts under this component.

When User shake the iphone ,all components of the machine which were draged to somewhere will return  to
where they originally located.

===Commenting===

 When commenting, users will be presented with a 'touch keyboard' on screen to type in their message. A click-and-drag function is available to scan through the page for posts if there are more messages than can fit on-screen.